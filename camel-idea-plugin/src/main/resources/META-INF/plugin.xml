<idea-plugin version="2" url="https://github.com/davsclaus/camel-idea-plugin">
  <id>org.apache.camel</id>
  <name>Apache Camel IDEA Plugin</name>
  <version>0.3.9</version>
  <vendor email="users@apache.camel.org" url="http://camel.apache.org">Apache Camel</vendor>

  <description><![CDATA[
      Plugin for Intellij IDEA to provide a set of small Apache Camel related capabilities to the code editor.

      The plugin includes:
      <ul>
        <li>Code completion for Camel endpoints in Java, Groovy, Kotlin, Scala, XML, properties or yaml files (ctrl + space)</li>
        <li>Code completion for Camel property placeholders (cursor after {{)</li>
        <li>Endpoint options filtered to only include applicable options when used as consumer vs producer only mode</li>
        <li>Quick navigation to other Camel routes routing to this route by clicking the Camel icon in the gutter</li>
        <li>Intention to add new Camel endpoint (alt + enter in empty string)</li>
        <li>Quick documentation for Camel endpoints and external link to Camel component opening in web browser (ctrl + j and shift-F1)</li>
        <li>Show endpoint information in tooltip when hovering mouse over from/to etc in Java route builders</li>
        <li>Supports 3rd party Camel components (if they have been properly built with Camel JSon schema metadata)</li>
        <li>Attempts to use same version as camel-core dependency from the loaded project (may require download over internet)</li>
        <li>Real time validation for Camel endpoints in Java, Groovy, Kotlin, Scala, XML (underline errors in red)</li>
        <li>Real time validation for Camel simple language in Java, XML and Groovy (underline errors in red)</li>
        <li>Inspection (analyze code) to validate Camel endpoints and Simple language in Java, Groovy, Kotlin, Scala, and XML</li>
        <li>Preference page to customize property ignore list from property completion</li>
        <li>Preference page to exclude property/yml files from property completion</li>
        <li>Supports Maven, Gradle, and SBT based projects</li>
      </ul>
    ]]></description>

  <change-notes><![CDATA[
      <ul>
        <li>0.3.9 - Work in progress</li>
        <li>0.3.8 - Support for code completion and validation with multi-line endpoint URI
                    Only show one Camel icon per route if the route endpoint uri was multi-lined.
                    Minor bug fixes.</li>
      </ul>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="162.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.java</depends>

  <!-- depend on the properties plugin -->
  <depends>com.intellij.properties</depends>
  <depends>com.intellij.spring</depends>
  <depends>com.intellij.java-i18n</depends>

  <project-components>
    <!-- Camel project component -->
    <component>
      <implementation-class>org.apache.camel.idea.CamelProjectComponent</implementation-class>
    </component>
  </project-components>

  <extensions defaultExtensionNs="com.intellij">

    <!-- services which can be requested from IDEA api -->
    <projectService serviceImplementation="org.apache.camel.idea.service.CamelCatalogService"/>
    <projectService serviceImplementation="org.apache.camel.idea.service.CamelService"/>
    <applicationService serviceImplementation="org.apache.camel.idea.service.CamelPreferenceService"/>

    <!-- allow code completion of Camel endpoints-->
    <completion.contributor language="JAVA" implementationClass="org.apache.camel.idea.completion.CamelJavaReferenceContributor"/>
    <completion.contributor language="XML" implementationClass="org.apache.camel.idea.completion.CamelXmlReferenceContributor"/>
    <completion.contributor language="Groovy" implementationClass="org.apache.camel.idea.completion.CamelGroovyReferenceContributor"/>
    <completion.contributor language="kotlin" implementationClass="org.apache.camel.idea.completion.CamelKotlinReferenceContributor"/>
    <completion.contributor language="Scala" implementationClass="org.apache.camel.idea.completion.CamelScalaReferenceContributor"/>
    <completion.contributor language="any" implementationClass="org.apache.camel.idea.completion.CamelPropertiesOrYamlFileReferenceContributor" order="FIRST"/>

    <!-- puts the Camel icon in the gutter for each line that starts a Camel route -->
    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="org.apache.camel.idea.gutter.CamelRouteLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="XML" implementationClass="org.apache.camel.idea.gutter.CamelRouteLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="Groovy" implementationClass="org.apache.camel.idea.gutter.CamelRouteLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="kotlin" implementationClass="org.apache.camel.idea.gutter.CamelRouteLineMarkerProvider"/>
    <codeInsight.lineMarkerProvider language="Scala" implementationClass="org.apache.camel.idea.gutter.CamelRouteLineMarkerProvider"/>

    <!-- code completion of Camel property placeholders, eg {{foo}} style -->
    <completion.contributor language="any" implementationClass="org.apache.camel.idea.completion.CamelPropertyPlaceholderReferenceContributor"/>

    <!-- quick documentation for Camel endpoints -->
    <lang.documentationProvider language="JAVA" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="XML" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="Groovy" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="kotlin" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="Scala" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="Properties" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>
    <lang.documentationProvider language="yaml" implementationClass="org.apache.camel.idea.documentation.CamelDocumentationProvider"
                                order="first"/>

    <!-- intention to add Camel endpoint -->
    <intentionAction>
      <className>org.apache.camel.idea.intention.CamelAddEndpointIntention</className>
    </intentionAction>

    <!-- annotator to validate endpoints -->
    <annotator language="JAVA" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="XML" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="Groovy" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="kotlin" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="Scala" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="Properties" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>
    <annotator language="yaml" implementationClass="org.apache.camel.idea.annotator.CamelEndpointAnnotator"/>

    <!-- annotator to validate simple language -->
    <annotator language="JAVA" implementationClass="org.apache.camel.idea.annotator.CamelSimpleAnnotator"/>
    <annotator language="XML" implementationClass="org.apache.camel.idea.annotator.CamelSimpleAnnotator"/>
    <annotator language="Groovy" implementationClass="org.apache.camel.idea.annotator.CamelSimpleAnnotator"/>
    <annotator language="Scala" implementationClass="org.apache.camel.idea.annotator.CamelSimpleAnnotator"/>

    <!-- inspection to validate endpoints -->
    <localInspection groupName="Apache Camel" implementationClass="org.apache.camel.idea.inspection.CamelInspection"/>

    <!-- preference -->
    <applicationConfigurable id="camel" displayName="Apache Camel" groupId="language"
                             instance="org.apache.camel.idea.preference.CamelPreferencePage"/>

  </extensions>

</idea-plugin>
